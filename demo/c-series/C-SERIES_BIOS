Configuring BIOS Tokens with the Cisco C-Series XML API

=head1 Purpose

This document provides an example of how the C-Series XML API can be used to 
configure bios tokens.


=head1 Setup

We assume that you have downloaded and installed the UcsSimple-CommMgr perl module.
It can be downloaded from : 
    https://github.com/greygoose/UcsSimple-CommMgr

We also assume that there is a configuration script for the target c-series called 
"./cfg/220M3.cfg".    This file provides the  communication settings for the C-Series
system.  Here is an example configuration file:

    [UCS]
    URI     = http://ucs-vip/nuova
    UNAME = admin
    PASSWORD = password

    [APP]
    LOG4PERL = ./config/log.conf

(Please note the lack of security in storing credentials in a configuration file).



=head2 Approach

This document describes an approach to automation c-series provisioning of BIOS tokens.
The same techniques described can be used to configure all c-series components.
The required steps are:


=over


=item 1 

Configure desired bios settings using GUI.

=item 2 

Query the server's BIOS tokens and save to a file; 

=item 3 

Create a "golden" BIOS configuration; 

=item 4 

Check the system settings;

=item5 

Configure other servers using the BIOS configuration;

=item 6 

Verify the configuration 

=back



=head2 Configure desired bios settings

Using the web gui, configure the desired server BIOS settings.



=head2 Query the bios settings

We can query the bios settings (and save them to a file) with the following query:

	resolve-dn --cfg=./cfg/220M3.cfg --dn=sys/rack-unit-1/bios/bios-settings --hier > 220M3-bios-query.xml



=head2 Create a "golden" BIOS configuration

Convert the query result to a xml configuration that can be applied to other servers.  
This is done using the xml schema and saved in the file 2220M3-gold.xml

         convert-to-config --xml=220M3-bios-query.xml --schema=/home/ikent/demo/schema/UCS-C-Series-XML-API-Schemas-V1.5_1f/RACK-IN-UCS-C220.xsd > 220M3-gold.xml


=head2 Check the system settings

Query the complete rack-server configuration and state using a hierarchical query.  

	resolve-dn --cfg=./cfg/target.cfg --dn=sys --hier > target.xml

To print print the xml query/results or result counts:

	pretty-print --xml=target.xml --populateDn | more
	pretty-print --populateDn --xml=target.xml | count-elements

We can use some utility scripts to harvest interesting information from the above query.

	mo-print --xml=target.xml --print-cfg=./print-cfg/fault.xml --format=table
	mo-print --xml=target.xml --print-cfg=./print-cfg/inventory.xml --format=table | more
	mo-print --xml=target.xml --print-cfg=./print-cfg/firmware.xml   --format=table | more



=head2 Configure servers using this BIOS configuration

We can now use the BIOS configuration to configure other servers.

	post --cfg=./cfg/target.cfg --xml=220M3-gold.xml

Note: If we were going to try to configure a different type or model of server (or a server with a
different bios version), we should first check that it accepts the same set of bios tokens.
We do this by querying  the bios settings of the target and golden systems and comparing the using the 
ucs-diff script as follows:
        ucs-diff --no-vals --xml=220-M3-biosQuery.xml --xml=target-biosQuery.xml 

If any differences were found, we could manually make changes.


=head2 Verify the configuration

We can do the following steps to verify the configuration. 

Query the configured server "target-server" for its current bios settings:

	resolve-dn --cfg=./cfg/target.cfg --dn=sys/rack-unit-1/bios/bios-settings --hier > target-bios-query.xml

Convert the query to a configuration operation:

         convert-to-config --xml=target-bios-query.xml --schema=/home/ikent/demo/schema/UCS-C-Series-XML-API-Schemas-V1.5_1f/RACK-IN-UCS-C220.xsd > target-current.xml

Compare the two xml configuration documents:

	ucs-diff --xml=./target-current.xml --xml=./220M3-gold.xml 


=head1 Miscellaneous Notes

=head2 Firmware Installation

I used the following configuration to programmatically install my server firmware:

    <configConfMo cookie="REPLACE_COOKIE" dn="sys/huu/firmwareUpdater">
        <inConfig>
            <huuFirmwareUpdater dn="sys/huu/firmwareUpdater"
                adminState="trigger"
                remoteIp="10.193.1.70"
                remoteShare="/build2/ikent/images/ucs-c220-huu-1.5.1.16.iso"
                mapType="nfs"
                username="ikent"
                password="MY_PASS"
                stopOnError="yes"
                timeOut="120"
                verifyUpdate="true"
                updateComponent="all"/>
        </inConfig>
    </configConfMo>


=head1 AUTHOR

Ike Kent, C<< <ikent at cisco.com> >>



=head1 LICENSE AND COPYRIGHT

Copyright 2013 Ike Kent.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.


=cut



